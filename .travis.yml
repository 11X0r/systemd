sudo: required

services:
    - docker
    
cache: ccache

jobs:
    include:
        - stage: build docker image
          env:
              # The machine id will be passed to Dockerfile for later checks
              - MACHINE_ID=$(cat /var/lib/dbus/machine-id)
          before_script: &update
              # Ensure the latest version of docker is installed
              - sudo apt-get update
              - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
              - docker --version
              - env > .env
          script:
                # Copy content of CI_DIR into WORKDIR
              - find $CI_DIR -maxdepth 1 -type f -exec cp -t . {} +
              - echo "ENV GIT_SHA ${TRAVIS_COMMIT}" >> Dockerfile
              - echo "ENV MACHINE_ID ${MACHINE_ID}" >> Dockerfile
              - echo "$(git log -1 ${TRAVIS_COMMIT})" >> COMMITINFO
                # Build docker container
              - $CI_SCRIPT_DIR/build-docker-image.sh

        - stage: build
          language: c
          compiler: gcc
          env:
              # The machine id will be passed to container
              - MACHINE_ID=$(cat /var/lib/dbus/machine-id)
          before_script: *update
          script:
              - docker run -v $HOME/.ccache:$HOME/.ccache -dit --name travis_build ${DOCKER_REPOSITORY}:${TRAVIS_COMMIT} bash
              - docker exec -u 0 -ti travis_build bash -c "echo ${MACHINE_ID} > /etc/machine-id"
              - docker exec -ti travis_build meson build
              - docker exec -ti travis_build ninja -C build
                # Commit it to the new image that will be used for testing
              - docker commit -m "systemd build state" -a "${AUTHOR_NAME}" travis_build ${DOCKER_REPOSITORY}:${TRAVIS_COMMIT}

        - stage: test
          language: c
          compiler: gcc
          before_script: *update
          script:
              - docker run -v $HOME/.ccache:$HOME/.ccache --privileged --net=host -dit --name travis_test ${DOCKER_REPOSITORY}:${TRAVIS_COMMIT} bash
              - docker exec -ti travis_test ninja -C build test
              - docker commit -m "systemd test state" -a "${AUTHOR_NAME}" travis_test ${DOCKER_REPOSITORY}:${TRAVIS_COMMIT}

        - stage: coverity scan
          language: c
          compiler: gcc
          before_script: *update
          env:
              - COVERITY_SCAN_PROJECT_NAME="$TRAVIS_REPO_SLUG"
              - COVERITY_SCAN_NOTIFICATION_EMAIL="${AUTHOR_EMAIL}"
              - COVERITY_SCAN_BRANCH_PATTERN="$TRAVIS_BRANCH"
              # Disable CCACHE for cov-build to compilation units correctly
              - CCACHE_DISABLE=1
              # Token for systemd/systemd Coverity Scan Analysis
              #   The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
              #   via the "travis encrypt" command using the project repo's public key
              - secure: "lErL36sR24agNtkp5xIQbZtrDERHMH0sXXu3MyKG4itkmM8a3vmqPesriA03elDnUitP880GmEtfdYAHJegOBnF6pHsnqqDRnVMoXlQJiwM++vOrhymr3dc/17DXa1EAph8rTKy/uwjgzZT0330k08TFs4WXI/cGOMwCGKKkjZPdVTPesMuU5D4+vXYHSw6xTARzEEx7A+AAA6VE2wy5lTt4KSkzia9Il1d79FEPe1BlIuQqH2kdras1um7TAzCdTxCCnc6zhWvnSnkHfWhxEXnqHBIwVuUoXPNzDgwUr0/FqudFSqMFXsJEUWpuNdzbXnpZtG3DuvVUhOGOH294zUh/CAGNAxx4x4+9xLSnVTEC7Ybl/GB/vZ/Olx3WIa+hOOOi0ZKgCbzoNTH0dRC4ExSb+dOuBFwVZeq/nRT0m2SdI3hdhrv+tQVuawezdta/SEuWGFwQphctWE2PvRcsIasFmh5tjBBUKOyDloRFPLQao8zx/5D1k/yTu7x7jiUUJxsNbDGWGEx+IuV9cLUJV0qcnw2GjERE6RAqZz7t8I6pKJLzoPGxlpRwj6oCY3DffVOahaBsV1AGHE/VxxkRXOR3FTK+AckMRdLLKCbLrVQdRTLZLdQqKyw7fexMGQUaWTcGfzTBzWbLBwSaIV1JViGru2iWXYAuafys5ZYbWlw="
          script:
                # Copy content of CI_DIR into WORKDIR
              - find $CI_DIR -maxdepth 1 -type f -exec cp -t . {} +
                # Build container for current user
              - $CI_SCRIPT_DIR/build-docker-image.sh

                # For kernel version 4.8+
              - sudo sysctl vsyscall=emulate || true
                # Prepare environment for Coverity tool
              - |
                  PLATFORM=`uname`
                  export TOOL_BASE="/tmp/coverity-scan-analysis"
                  export SCAN_URL="https://scan.coverity.com"
                  export UPLOAD_URL="https://scan.coverity.com/builds"
                  export TOOL_ARCHIVE="/tmp/cov-analysis-${PLATFORM}.tgz"

                # Get Coverity tool
              - $CI_TOOL_DIR/get-coverity.sh
              - TOOL_DIR="$(find $TOOL_BASE -type d -name 'cov-analysis*')"

                # Export env variables for Coverity scan
              - env | grep -E "TRAVIS|COV|TOOL|URL" > .cov-env
              - |
                  docker run -dit --env-file .cov-env \
                  -v ${TOOL_BASE}:${TOOL_BASE}:ro \
                  --name travis_coverity_scan ${DOCKER_REPOSITORY}:${TRAVIS_COMMIT} bash
                # Make sure Coverity script is executable
              - docker cp tools/coverity.sh travis_coverity_scan:/usr/local/bin
                # Preconfigure with meson to prevent Coverity from capturing meson metadata
                # Set compiler flag to prevent emit failure
              - docker exec -it travis_coverity_scan sh -c "CFLAGS='-D_Float128=long\ double' meson cov-build -Dman=false"
                # Run Coverity Analysis
              - docker exec -it travis_coverity_scan coverity.sh build
              - docker exec -it travis_coverity_scan coverity.sh upload


# Specify the order of stages and conditions
stages:
      # Helper stage to determine whether coverity stage should be allowed
    - name: initialization

    - name: build docker image
      if: type != cron
    - name: build
      if: type != cron
    - name: test
      if: type != cron

      # These stages run separately, the resulting container will not be pushed to Docker Hub
      # This stage will only run on special conditions
    - name: coverity scan
      if: type = cron

env:
    global:
        # Secure Docker Hub credentials
        - ADMIN_EMAIL=macermak@redhat.com

        - AUTHOR_NAME="$(git log -1 $TRAVIS_COMMIT --pretty=\"%aN\")"
        - AUTHOR_EMAIL="$(git log -1 $TRAVIS_COMMIT --pretty=\"%aE\")"

        - CI_DIR="$TRAVIS_BUILD_DIR/travis-ci"
        - CI_TOOL_DIR="$CI_DIR/tools"
        - CI_SCRIPT_DIR="$CI_DIR/scripts"

notifications:
  email:
    recipients:
      - ${ADMIN_EMAIL}
      - ${AUTHOR_EMAIL}
  irc:
    channels:
      - "irc.freenode.org#systemd"
    on_success: change
    on_failure: always
